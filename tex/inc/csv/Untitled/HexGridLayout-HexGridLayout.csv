Тип возвращаемого значения;Имя;Параметры;Назначение
void;HexGridLayout;QWidget *parent = nullptr;Конструктор виджета, описывающего работу виджета гексагональной сетки и управляющих элементов (кнопок, меню)
void;openFile;;Позволяет пользователю выбрать файл для чтения в ситле ОС
void;saveHexGrid;;Позволяет пользователю выбрать место для сохранения и имя файла с данными о гексагональной сетке
void;createNewHexGrid;int lenght=0;Создает новую гексагональную сетку (отображение и модель)
void;closeCurrentHexGrid;;Удаляет отображение и модель актуальной гексагональной сетки
void;saveAllIterations;;Позволяет пользователю выбрать папку для для сохранения всех итераций работы алгоритма в формате SVG
void;doDijkstra;bool bySteps = false;Выполняет алгоритм на актуальной сетке с возможностью поэтапного выполнения
;;;
;;;
TriangularHexGraph;*hexGridModel;Указатель на модель гексагональной сетки;
HexGridView;*hexGridView;Указатель на виджет с отображением гексагональной сетки;
QVBoxLayout;*rightVBox;Указатель на стек управляющих кнопок;
;;;
std::map<HexCube, HexCube>;came_from;Карта, хранящая данные о предыдущем шестиугольнике;
std::map<HexCube, HexData>;costSoFar;Карта стоимостей путей до соответствующих ключу шестиугольников;
PriorityQueue;frontier;Фронт;
;;;
;;;
;;;
;;;
;;;